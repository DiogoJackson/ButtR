### Coisas para fazer ###

1. criar uma planilha com as refletancias.
2. Adicionar essa planilha no pacote.
3. Criar funcao para filtrar os dados desse pacote de forma simples.

### Jim's suggestions ###

#--- To do ---#
* I suggest that the function name should be more general than get_species, because someone might want to get families, locations or even the whole database. Perhaps install_buttr_dbs?

 * We must avoid making assumptions about how Dryad stores data. That means we cannot hard-wire URLs, but instead must use the Dryad API. (How can I get an API for something that we dont have yet?).

 * Similarly to the previous point, we need to decouple the R package from the contents of Dryad, so that the Dryad repository can be modified (species added, renamed or removed) and the R package still works without change. That means we cannot hard-wire things like species urls or species families in the R code. Imagine that a species name changes or contained a typo. In that case, we would have to fix both the database and the R package. Instead of hard-wiring mappings, we can use the metadata spreadsheet that is part of the database to get available species and the families, locations etc. We can obtain file URLs using the API (I have written a function to be used, and added it to the repo). (How can I use the spreadsheet to this?).

 * It is possible to conditionally unzip parts of zip files, rather than unzipping everything and then deleting unwanted files. It might be faster and use less disc space, but it's probably worth testing if this is true. To do this, first unzip with "list = TRUE" (i.e. doesn't unzip, justs lists files in the zip), choose the files to be unzipped, then call unzip with "files = ...".) (I need to test this).

 * Zip files should be deleted. If they are deleted immediately after unzipping, that will reduce free space requirements for users with little disc space.

#--- Done ---#

 * I think that calling get_species with no arguments should just install the whole database.

 * Is the "place" argument a geographical location? If so, "location" might be less ambiguous a name.

 * Installing the database, or part of it, should always install the metadata spreadsheet

 * User should be able to specify the installation folder for database.

 * Supressing warnings (in dir.create, line 46) is usually a bad idea. Instead, check if the directory exists before creating it, and then any warnings will indicate a potential problem.
 
 * We should only download any file at most once.

 * Zip files should be downloaded to a temporary folder so that if something goes wrong they will be cleaned up.

###